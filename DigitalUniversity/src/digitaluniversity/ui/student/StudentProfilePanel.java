/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 * @author priyankavadivel
 * @author vedanarayananshrirangesh
 * @author rg
 */

package digitaluniversity.ui.student;

import java.awt.CardLayout;
import model.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author vedanarayananshrirangesh
 */
public class StudentProfilePanel extends javax.swing.JPanel {
    
    private JPanel getRoot() {
        return (JPanel) this.getClientProperty("root");
    }

    private Business getBusiness() {
        // Accesses central Business model
        // where all data is stored
        return (Business) this.getClientProperty("business");
    }

    private UserAccount getAccount() {
        // Gets the currently logged-in user account
        return (UserAccount) this.getClientProperty("account");
    }

    public StudentProfilePanel() {
        // Initialize UI + attach screen-load listener
        // to refresh profile when shown
        initComponents();
        setFieldsEditable(false);

        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                populateProfile();
            }
        });
    }

    private void populateProfile() {
        // Loads student data into UI fields
        // ensures fields remain non-editable
        Student s = currentStudent();
        if (s == null) {
            txtName.setText("");
            txtEmail.setText("");
            txtProgram.setText("");
            return;
        }
        txtName.setText(s.getName());
        txtEmail.setText(s.getEmail());
        txtProgram.setText(s.getProgram());
        setFieldsEditable(false);
    }

    private Student currentStudent() {
        // Resolves actual Student object
        // using business + logged in account ID
        if (getBusiness() == null || getAccount() == null) {
            return null;
        }
        return getBusiness().getStudentById(getAccount().getPersonId());
    }


    private void loadFromModel() {
        // Reloads profile values from model safely
        // used for reset or refresh
        Student s = currentStudent();
        if (s == null) {
            return;
        }
        txtName.setText(s.getName());
        txtEmail.setText(s.getEmail());
        txtProgram.setText(s.getProgram());
        // ensure read-only state on load
        setFieldsEditable(false);
    }

    /**
     * Toggles read-only/editable modes
     * for fields and buttons accordingly
     */
    private void setFieldsEditable(boolean editable) {
        
        txtName.setEditable(editable);
        txtEmail.setEditable(editable);
        txtProgram.setEditable(editable);
        btnSave.setEnabled(editable);
        btnCancel.setEnabled(editable);
        btnEdit.setEnabled(!editable);
    }

    /**
     * Restores original values from model and exits edit mod
     */ 
    private void revertFields() {
        loadFromModel();
        setFieldsEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblProgram = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtProgram = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Student Profile");

        lblName.setText("Name");

        lblEmail.setText("Email");

        lblProgram.setText("Program");

        btnSave.setBackground(new java.awt.Color(153, 204, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblProgram)
                            .addComponent(lblEmail)
                            .addComponent(btnEdit)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnBack)))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(txtEmail)
                    .addComponent(txtProgram)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(lblProgram))
                    .addComponent(txtProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnEdit))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Validates + writes updated profile back to model
    // then locks fields again
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Student s = currentStudent();
        if (s == null) {
            JOptionPane.showMessageDialog(this, "No student loaded");
            return;
        }

        String name = txtName.getText().trim();
        String email = txtEmail.getText().trim();
        String program = txtProgram.getText().trim();

        if (name.isEmpty() || email.isEmpty() || program.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required");
            return;
        }

        s.setName(name);
        s.setEmail(email);
        s.setProgram(program);

        setFieldsEditable(false);
        JOptionPane.showMessageDialog(this, "Profile saved");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        setFieldsEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed
    
    // Reverts any unsaved input changes
    // returning to read-only state
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        revertFields();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        ((CardLayout) getRoot().getLayout()).previous(getRoot());
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblProgram;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtProgram;
    // End of variables declaration//GEN-END:variables
}
