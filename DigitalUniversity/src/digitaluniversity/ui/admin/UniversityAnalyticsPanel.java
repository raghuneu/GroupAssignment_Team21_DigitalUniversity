/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package digitaluniversity.ui.admin;

import java.awt.CardLayout;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business;

/**
 *
 * @author priyankavadivel
 */
public class UniversityAnalyticsPanel extends javax.swing.JPanel {
    // Retrieve parent container (used for CardLayout navigation)

    private JPanel getRoot() {
        return (JPanel) this.getClientProperty("root");
    }

    // Retrieve the shared Business object containing all data
    private Business getBusiness() {
        return (Business) this.getClientProperty("business");
    }

    /**
     * Constructor - initializes components and UI layout.
     */
    public UniversityAnalyticsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form
     * WARNING: Do NOT modify this code The content of this method is always
     * regenerated by the Form Editor
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoleStats = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseStats = new javax.swing.JTable();
        btnGenerate = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("University Analytics Dashboard");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        tblRoleStats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role", "Active Users Count"
            }
        ));
        jScrollPane1.setViewportView(tblRoleStats);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 422, 161));

        tblCourseStats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Students ", "Tuition Revenue"
            }
        ));
        jScrollPane2.setViewportView(tblCourseStats);
        if (tblCourseStats.getColumnModel().getColumnCount() > 0) {
            tblCourseStats.getColumnModel().getColumn(0).setResizable(false);
            tblCourseStats.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 277, 422, 176));

        btnGenerate.setText("Generate Reports");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });
        add(btnGenerate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        btnExport.setBackground(new java.awt.Color(153, 204, 255));
        btnExport.setText("Export to CSV");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 480, -1, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 480, 107, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        generateAction();
        JOptionPane.showMessageDialog(this, "Report generated successfully");
    }//GEN-LAST:event_btnGenerateActionPerformed

    /**
     *
     * Exports both Role and Course statistics tables into a CSV file
     */
    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Save CSV file");
        int choice = chooser.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            try (FileWriter writer = new FileWriter(chooser.getSelectedFile() + ".csv")) {
                DefaultTableModel roleModel = (DefaultTableModel) tblRoleStats.getModel();
                writer.write("Role,Active Users Count\n");
                for (int i = 0; i < roleModel.getRowCount(); i++) {
                    writer.write(roleModel.getValueAt(i, 0) + "," + roleModel.getValueAt(i, 1) + "\n");
                }
                // Write Course statistics
                writer.write("\nCourse ID,Course Name,Students,Tuition Revenue\n");
                DefaultTableModel courseModel = (DefaultTableModel) tblCourseStats.getModel();
                for (int i = 0; i < courseModel.getRowCount(); i++) {
                    writer.write(courseModel.getValueAt(i, 0) + "," + courseModel.getValueAt(i, 1) + ","
                            + courseModel.getValueAt(i, 2) + "," + courseModel.getValueAt(i, 3) + "\n");
                }
                JOptionPane.showMessageDialog(this, "CSV exported successfully!");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error exporting file: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnExportActionPerformed
    /**
     * Handles "Refresh" button click to reload latest statistics.
     */
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        generateAction();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AdminWorkAreaPanel adminPanel = new AdminWorkAreaPanel();
        adminPanel.putClientProperty("business", getBusiness());
        adminPanel.putClientProperty("root", getRoot());
        getRoot().add("adminWorkArea", adminPanel);
        ((CardLayout) getRoot().getLayout()).show(getRoot(), "adminWorkArea");
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourseStats;
    private javax.swing.JTable tblRoleStats;
    // End of variables declaration//GEN-END:variables

    void generateAction() {
        DefaultTableModel roleModel = (DefaultTableModel) tblRoleStats.getModel();
        roleModel.setRowCount(0);
        roleModel.addRow(new Object[]{"Admins", getBusiness().getAdmins().size()});
        roleModel.addRow(new Object[]{"Faculty", getBusiness().getFaculties().size()});
        roleModel.addRow(new Object[]{"Students", getBusiness().getStudents().size()});

        DefaultTableModel courseModel = (DefaultTableModel) tblCourseStats.getModel();
        courseModel.setRowCount(0);
        getBusiness().getCourses().forEach(c
                -> courseModel.addRow(new Object[]{c.getId(), c.getTitle(), "-", c.getCredits() * 1000})
        );
    }
}
